; .\test.SRC generated from: test.c
; COMPILER INVOKED BY:
;        C:\dev\Keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND SRC(.\test.SRC)

$NOMOD51

NAME	TEST

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
EA	BIT	0A8H.7
IE	DATA	0A8H
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
WR	BIT	0B0H.6
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
TF1	BIT	088H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
REN	BIT	098H.4
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
PSW	DATA	0D0H
?PR?init?TEST        SEGMENT CODE 
?PR?main?TEST        SEGMENT CODE 
?PR?I0?TEST          SEGMENT CODE 
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	cLed
	PUBLIC	I0
	PUBLIC	main
	PUBLIC	init

	DSEG  AT  020H
           cLed:   DS   1
; #include<reg51.h>
; 
; data unsigned char cLed _at_ 0x20;
; 
; void init()

	RSEG  ?PR?init?TEST
init:
			; SOURCE LINE # 5
; {
			; SOURCE LINE # 6
; 	IT0=1;
			; SOURCE LINE # 7
	SETB 	IT0
; 	EX0=1;
			; SOURCE LINE # 8
	SETB 	EX0
; 	EA=1;
			; SOURCE LINE # 9
	SETB 	EA
; }
			; SOURCE LINE # 10
	RET  	
; END OF init

; 
; void main()

	RSEG  ?PR?main?TEST
main:
			; SOURCE LINE # 12
; {
			; SOURCE LINE # 13
; 	cLed = 0xfe;
			; SOURCE LINE # 14
	MOV  	cLed,#0FEH
; 	P2=cLed;
			; SOURCE LINE # 15
	MOV  	P2,cLed
; 	init();
			; SOURCE LINE # 16
	LCALL	init
?C0002:
; 	while(1);
			; SOURCE LINE # 17
	SJMP 	?C0002
; END OF main

CSEG	AT	00003H
	LJMP	I0

; }
; 
; void I0() interrupt 0

	RSEG  ?PR?I0?TEST
	USING	0
I0:
	PUSH 	ACC
	PUSH 	B
	PUSH 	DPH
	PUSH 	DPL
	PUSH 	PSW
	MOV  	PSW,#00H
	PUSH 	AR0
	PUSH 	AR1
	PUSH 	AR2
	PUSH 	AR3
	PUSH 	AR4
	PUSH 	AR5
	PUSH 	AR6
	PUSH 	AR7
	USING	0
			; SOURCE LINE # 20
; {
;   # pragma asm
; 	MOV A, 20H
	  MOV A, 20H
; 	RL A
	  RL A
; 	MOV 20H, A
	  MOV 20H, A
;   # pragma endasm
;   P2=cLed;
			; SOURCE LINE # 27
	MOV  	P2,cLed
; }
			; SOURCE LINE # 28
	POP  	AR7
	POP  	AR6
	POP  	AR5
	POP  	AR4
	POP  	AR3
	POP  	AR2
	POP  	AR1
	POP  	AR0
	POP  	PSW
	POP  	DPL
	POP  	DPH
	POP  	B
	POP  	ACC
	RETI 	
; END OF I0

	END
